{"ast":null,"code":"var _jsxFileName = \"/media/sachin/Windows/notes/react/res_management/src/App.js\";\nimport './App.css';\nimport Login from './Seller/Login';\nimport SignUp from './Seller/SignUp';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showposition);\n    } else {\n      alert(\"Sorry Not available!\");\n    }\n  };\n\n  const showposition = position => {\n    console.log(position);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [getLocation(), /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/media/sachin/Windows/notes/react/res_management/src/App.js"],"names":["Login","SignUp","React","Component","App","getLocation","navigator","geolocation","getCurrentPosition","showposition","alert","position","console","log"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,WAAW,GAAC,MAAK;AACtB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,YAAzC;AACA,KAFF,MAEQ;AACLC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,GAND;;AAOA,QAAMD,YAAY,GAAIE,QAAD,IAAa;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGN,WAAW,EADd,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KAlBQD,G;AAoBT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Login from './Seller/Login';\nimport SignUp from './Seller/SignUp';\nimport React,{Component} from 'react';\n\nfunction App() {\n  const getLocation=() =>{\n   if (navigator.geolocation) {\n     navigator.geolocation.getCurrentPosition(showposition)\n    } else {\n      alert(\"Sorry Not available!\");\n    }\n  }\n  const showposition = (position) =>{\n    console.log(position)\n  }\n  return (\n    <div className=\"App\">\n      {getLocation()}\n      {/* <Login/> */}\n      <SignUp/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}